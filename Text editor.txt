import tkinter as tk
from tkinter import filedialog, scrolledtext
import re

class TextEditor:
    def __init__(self, root):
        self.root = root
        self.root.title("Text Editor")
        self.text_area = scrolledtext.ScrolledText(self.root, undo=True)
        self.text_area.pack(fill=tk.BOTH, expand=True)
        self.file_path = None

        # Create menu bar
        menu_bar = tk.Menu(self.root)
        file_menu = tk.Menu(menu_bar)
        file_menu.add_command(label="New", command=self.new_file)
        file_menu.add_command(label="Open", command=self.open_file)
        file_menu.add_command(label="Save", command=self.save_file)
        file_menu.add_separator()
        file_menu.add_command(label="Exit", command=self.root.quit)
        menu_bar.add_cascade(label="File", menu=file_menu)

        edit_menu = tk.Menu(menu_bar)
        edit_menu.add_command(label="Word Count", command=self.word_count)
        menu_bar.add_cascade(label="Edit", menu=edit_menu)

        self.root.config(menu=menu_bar)

        # Syntax highlighting
        self.text_area.bind("<KeyRelease>", self.highlight_syntax)

    def new_file(self):
        self.text_area.delete("1.0", tk.END)
        self.file_path = None

    def open_file(self):
        file_path = filedialog.askopenfilename()
        if file_path:
            with open(file_path, "r") as file:
                content = file.read()
                self.text_area.delete("1.0", tk.END)
                self.text_area.insert("1.0", content)
            self.file_path = file_path

    def save_file(self):
        if self.file_path:
            content = self.text_area.get("1.0", tk.END)
            with open(self.file_path, "w") as file:
                file.write(content)
        else:
            self.save_file_as()

    def save_file_as(self):
        file_path = filedialog.asksaveasfilename(defaultextension=".txt")
        if file_path:
            content = self.text_area.get("1.0", tk.END)
            with open(file_path, "w") as file:
                file.write(content)
            self.file_path = file_path

    def word_count(self):
        content = self.text_area.get("1.0", tk.END)
        words = len(re.findall(r"\w+", content))
        tk.messagebox.showinfo("Word Count", f"The text contains {words} words.")

    def highlight_syntax(self, event=None):
        content = self.text_area.get("1.0", tk.END)
        self.text_area.tag_remove("keyword", "1.0", tk.END)
        self.text_area.tag_remove("string", "1.0", tk.END)
        self.text_area.tag_remove("comment", "1.0", tk.END)

        keywords = r"\b(and|as|assert|break|class|continue|def|del|elif|else|except|False|finally|for|from|global|if|import|in|is|lambda|None|nonlocal|not|or|pass|raise|return|True|try|while|with|yield)\b"
        strings = r"('([^'\\]|\\.)*'|\"([^\"\\]|\\.)*\")"
        comments = r"(#.*?$)"

        for match in re.finditer(keywords, content):
            start, end = match.span()
            self.text_area.tag_add("keyword", f"1.0+{start}c", f"1.0+{end}c")
        self.text_area.tag_config("keyword", foreground="purple")

        for match in re.finditer(strings, content):
            start, end = match.span()
            self.text_area.tag_add("string", f"1.0+{start}c", f"1.0+{end}c")
        self.text_area.tag_config("string", foreground="green")

        for match in re.finditer(comments, content):
            start, end = match.span()
            self.text_area.tag_add("comment", f"1.0+{start}c", f"1.0+{end}c")
        self.text_area.tag_config("comment", foreground="gray")

if __name__ == "__main__":
    root = tk.Tk()
    text_editor = TextEditor(root)
    root.mainloop()